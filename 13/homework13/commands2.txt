--start with renaming table with relationship many to many
cooker=# CREATE TABLE courses_ingredients(id_course integer, id_ingr integer, quantity numeric);
CREATE TABLE
cooker=# INSERT INTO courses_ingredients SELECT * FROM igr_for_course;
INSERT 0 43
cooker=# DROP TABLE igr_for_course;
DROP TABLE

--From now all data from igr_for_course are in courses_ingredients
cooker=# \d
                 List of relations
 Schema |        Name         |   Type   |  Owner
--------+---------------------+----------+----------
 public | courses             | table    | postgres
 public | courses_id_seq      | sequence | postgres
 public | courses_ingredients | table    | postgres
 public | ingredients         | table    | postgres
 public | ingredients_id_seq  | sequence | postgres
(5 rows)


cooker=# SELECT * FROM courses_ingredients;
 id_course | id_ingr | quantity
-----------+---------+----------
         1 |       1 |      0.3
         1 |       2 |     0.05
         1 |       3 |    0.005
         1 |       4 |      0.1
         1 |      10 |     0.03
         1 |      20 |     0.03
         3 |       3 |    0.005
         3 |       4 |      0.1
         3 |       8 |    0.015
         3 |       9 |      0.4
         3 |      10 |     0.05
         3 |      11 |      0.4
         3 |      14 |     0.05
         3 |      20 |     0.03
         2 |       3 |     0.01
         2 |       4 |      0.1
         2 |       5 |      0.5
         2 |       6 |      0.2
         2 |       7 |     0.15
         2 |       8 |     0.15
         2 |      10 |     0.05
         2 |      14 |     0.05
         2 |      20 |     0.03
         4 |       3 |     0.01
         4 |       4 |      0.1
         4 |       5 |      0.5
         4 |       6 |      0.2
         4 |       7 |     0.15
         4 |       8 |     0.15
         4 |      10 |     0.05
         4 |      12 |      0.2
         4 |      13 |      0.3
         4 |      14 |     0.05
         4 |      18 |      0.1
         4 |      19 |     0.01
         4 |      20 |     0.03
         5 |       1 |      0.2
         5 |       3 |    0.005
         5 |      15 |     0.25
         5 |      16 |      0.2
         5 |      17 |     0.05
         5 |      19 |     0.05
         5 |      20 |     0.05
(43 rows)

--JOIN and ORDER

cooker=# SELECT * FROM courses_ingredients
cooker-# INNER JOIN ingredients
cooker-# ON courses_ingredients.id_ingr=ingredients.id
cooker-# WHERE id_course > 3
cooker-# ORDER BY id_course desc,id_ingr asc;
 id_course | id_ingr | quantity | id |        name         | price_per_kg
-----------+---------+----------+----+---------------------+--------------
         5 |       1 |      0.2 |  1 | eggs                |           25
         5 |       3 |    0.005 |  3 | salt                |           10
         5 |      15 |     0.25 | 15 | flour               |           20
         5 |      16 |      0.2 | 16 | kefir               |           20
         5 |      17 |     0.05 | 17 | soda                |           20
         5 |      19 |     0.05 | 19 | sugar               |           20
         5 |      20 |     0.05 | 20 | oil                 |           30
         4 |       3 |     0.01 |  3 | salt                |           10
         4 |       4 |      0.1 |  4 | pepper              |           10
         4 |       5 |      0.5 |  5 | meat                |           10
         4 |       6 |      0.2 |  6 | potatoes            |           20
         4 |       7 |     0.15 |  7 | carrot              |           10
         4 |       8 |     0.15 |  8 | onion               |           10
         4 |      10 |     0.05 | 10 | greens              |          200
         4 |      12 |      0.2 | 12 | beet                |           20
         4 |      13 |      0.3 | 13 | cabage              |           20
         4 |      14 |     0.05 | 14 | garlic              |          100
         4 |      18 |      0.1 | 18 | souce from tomatoes |           40
         4 |      19 |     0.01 | 19 | sugar               |           20
         4 |      20 |     0.03 | 20 | oil                 |           30
(20 rows)

--LIMIT and OFFSET
cooker=# SELECT * FROM courses_ingredients
cooker-# INNER JOIN ingredients
cooker-# ON courses_ingredients.id_ingr=ingredients.id
cooker-# LIMIT 12 OFFSET 31;
 id_course | id_ingr | quantity | id |        name         | price_per_kg
-----------+---------+----------+----+---------------------+--------------
         3 |      14 |     0.05 | 14 | garlic              |          100
         5 |      15 |     0.25 | 15 | flour               |           20
         5 |      16 |      0.2 | 16 | kefir               |           20
         5 |      17 |     0.05 | 17 | soda                |           20
         4 |      18 |      0.1 | 18 | souce from tomatoes |           40
         5 |      19 |     0.05 | 19 | sugar               |           20
         4 |      19 |     0.01 | 19 | sugar               |           20
         5 |      20 |     0.05 | 20 | oil                 |           30
         4 |      20 |     0.03 | 20 | oil                 |           30
         2 |      20 |     0.03 | 20 | oil                 |           30
         3 |      20 |     0.03 | 20 | oil                 |           30
         1 |      20 |     0.03 | 20 | oil                 |           30
(12 rows)

-- how many ingredients are in each course
cooker=# SELECT id_course, COUNT(*) FROM courses_ingredients
cooker-# GROUP BY id_course
cooker-# ORDER BY id_course;
 id_course | count
-----------+-------
         1 |     6
         2 |     9
         3 |     8
         4 |    13
         5 |     7
(5 rows)

--I want to know price for each course
cooker=# SELECT courses.name as course, SUM(quantity*price_per_kg) as price_for_course
cooker-# FROM courses_ingredients
cooker-# INNER JOIN ingredients
cooker-# ON courses_ingredients.id_ingr = ingredients.id
cooker-# INNER JOIN courses
cooker-# ON courses_ingredients.id_course = courses.id
cooker-# GROUP BY courses.name
cooker-# ORDER BY courses.name;
          course          | price_for_course
--------------------------+------------------
 borshch                  |            43.20
 fritters                 |           17.550
 omelette                 |           16.450
 pasta with sausages      |          113.100
 soup with meat and pasta |            29.00
(5 rows)

--Hm-m-m. My borshch and soup with meat have to low price. 
--That's obviously means error in price for meat is presented.
cooker=# SELECT * FROM ingredients WHERE name = 'meat';
 id | name | price_per_kg
----+------+--------------
  5 | meat |           10
(1 row)
--That's here!
cooker=# UPDATE ingredients SET price_per_kg = 110 WHERE name = 'meat';
UPDATE 1

--Now looks ok!
cooker=# SELECT courses.name as course, SUM(quantity*price_per_kg) as price_for_course
cooker-# FROM courses_ingredients
cooker-# INNER JOIN ingredients
cooker-# ON courses_ingredients.id_ingr = ingredients.id
cooker-# INNER JOIN courses
cooker-# ON courses_ingredients.id_course = courses.id
cooker-# GROUP BY courses.name
cooker-# ORDER BY SUM(quantity*price_per_kg);
          course          | price_for_course
--------------------------+------------------
 omelette                 |           16.450
 fritters                 |           17.550
 soup with meat and pasta |            79.00
 borshch                  |            93.20
 pasta with sausages      |          113.100
(5 rows)

